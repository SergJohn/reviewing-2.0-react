{"ast":null,"code":"var _jsxFileName = \"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/FormAddReview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport api from '../services/Api';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormAddReview() {\n  _s();\n\n  const [bookTitle, setBookTitle] = useState([]);\n  const [reviewerName, setReviewerName] = useState([]);\n  const [reviewText, setReviewText] = useState([]);\n\n  const handleChangeBookTitle = e => {\n    setBookTitle(e.target.value);\n  };\n\n  const handleChangeReviewerName = e => {\n    setReviewerName(e.target.value);\n  };\n\n  const handleChangeReviewText = e => {\n    setReviewText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    async function uploadReview() {\n      const addedReview = {\n        \"title\": bookTitle.toString().trim().toLowerCase(),\n        \"name\": reviewerName.toString().trim().toLowerCase(),\n        \"review\": reviewText.toString().trim().toLowerCase()\n      };\n      const response = await api.post('/add-review', addedReview).then(() => console.log('Sending to backend')).catch(err => {\n        console.log(err);\n      });\n    }\n\n    uploadReview();\n    setBookTitle('');\n    setReviewerName('');\n    setReviewText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputs\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Which Book\",\n        type: \"text\",\n        name: \"title\",\n        value: bookTitle,\n        onChange: handleChangeBookTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Your name\",\n        type: \"text\",\n        name: \"name\",\n        value: reviewerName,\n        onChange: handleChangeReviewerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Tell us\",\n        type: \"text\",\n        name: \"review\",\n        value: reviewText,\n        onChange: handleChangeReviewText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secundary\",\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormAddReview, \"WnILDyVlSldgDeo9pdg0Z9M3YW0=\");\n\n_c = FormAddReview;\nexport default FormAddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormAddReview\");","map":{"version":3,"sources":["/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/FormAddReview.js"],"names":["React","useState","api","Input","Button","FormAddReview","bookTitle","setBookTitle","reviewerName","setReviewerName","reviewText","setReviewText","handleChangeBookTitle","e","target","value","handleChangeReviewerName","handleChangeReviewText","handleSubmit","preventDefault","uploadReview","addedReview","toString","trim","toLowerCase","response","post","then","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport api from '../services/Api';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nfunction FormAddReview() {\n\n    const [bookTitle, setBookTitle] = useState([]);\n    const [reviewerName, setReviewerName] = useState([]);\n    const [reviewText, setReviewText] = useState([]);\n\n    const handleChangeBookTitle = e => {\n        setBookTitle(e.target.value);\n    }\n\n    const handleChangeReviewerName = e => {\n        setReviewerName(e.target.value);\n    }\n\n    const handleChangeReviewText = e => {\n        setReviewText(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        async function uploadReview() {\n\n            const addedReview = {\n                \"title\": bookTitle.toString().trim().toLowerCase(),\n                \"name\": reviewerName.toString().trim().toLowerCase(),\n                \"review\": reviewText.toString().trim().toLowerCase()\n            };\n\n            const response = await api.post('/add-review', addedReview).then(() => console.log('Sending to backend')).catch(err => {\n                console.log(err);\n            });\n        }\n        uploadReview();\n\n        setBookTitle('');\n        setReviewerName('');\n        setReviewText('');\n\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"inputs\" onSubmit={handleSubmit}>\n                <h3>Add a review</h3>\n                <Input\n                    placeholder=\"Which Book\"\n                    type=\"text\"\n                    name=\"title\"\n                    value={bookTitle}\n                    onChange={handleChangeBookTitle}\n                />\n                <Input\n                    placeholder=\"Your name\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={reviewerName}\n                    onChange={handleChangeReviewerName}\n                />\n                <Input\n                    placeholder=\"Tell us\"\n                    type=\"text\"\n                    name=\"review\"\n                    value={reviewText}\n                    onChange={handleChangeReviewText}\n                />\n                <Button type=\"submit\" variant=\"contained\" color=\"secundary\">\n                    Add Review\n                </Button>\n            </form>\n        </React.Fragment>\n    );\n}\n\nexport default FormAddReview;\n"]},"metadata":{},"sourceType":"module"}