[{"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/index.js":"1","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/App.js":"2","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/reportWebVitals.js":"3","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Homepage.js":"4","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Reviews.js":"5","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Books.js":"6","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Nav.js":"7","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Footer.js":"8","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/FormAddBook.js":"9","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/FormAddReview.js":"10","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/services/Api.js":"11"},{"size":500,"mtime":1619135765268,"results":"12","hashOfConfig":"13"},{"size":583,"mtime":1619214491883,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1619135765268,"results":"15","hashOfConfig":"13"},{"size":507,"mtime":1619140484448,"results":"16","hashOfConfig":"13"},{"size":1778,"mtime":1619144757668,"results":"17","hashOfConfig":"13"},{"size":2263,"mtime":1619144361076,"results":"18","hashOfConfig":"13"},{"size":438,"mtime":1619140472331,"results":"19","hashOfConfig":"13"},{"size":1161,"mtime":1619140529220,"results":"20","hashOfConfig":"13"},{"size":1910,"mtime":1619144668591,"results":"21","hashOfConfig":"13"},{"size":2386,"mtime":1619144682340,"results":"22","hashOfConfig":"13"},{"size":120,"mtime":1619140444383,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qlubwf",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/index.js",[],"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/App.js",[],"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/reportWebVitals.js",[],"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Homepage.js",["50"],"import React from 'react';\nimport Nav from './Nav';\nimport HomeImg from '../home.jpg';\nimport Footer from './Footer';\n\nconst Homepage = () => (\n    <React.Fragment>\n        <Nav />\n        <h1 className=\"title-books-comp\">REVIEWING</h1>\n        <img className=\"imgJPG\" src={HomeImg} alt=\"Home image\"/>\n        <p className=\"slogan\">Add a book, find a new book to read, check reviews of others about your favorite one, leave your mark</p>\n        <Footer />\n    </React.Fragment>\n);\n\nexport default Homepage;","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Reviews.js",["51"],"import React, { useState, useEffect } from 'react';\nimport api from '../services/Api';\nimport Nav from './Nav';\nimport Button from '@material-ui/core/Button';\n\nfunction Reviews(book) {\n    let name = book.location.pathname.split(\":\");\n    let nameTitle = name[1];\n\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        async function loadReviews() {\n            const response = await api.get(`/reviews`);\n            setReviews(response.data);\n        }\n        loadReviews();\n\n    });\n\n    async function removeReview(review) {\n        const res = await api.delete(`/delete-review/${review}`);\n        console.log(res);\n    }\n\n    const listReviews = (\n        <ul>\n            {reviews.map((review) => review.title == nameTitle ?\n                <div className=\"book-card\" key={review.review}>\n                    <p>\n                        {review.title}\n                    </p>\n                    <h2>\n                        <strong>\n                            {review.name}\n                        </strong>\n                    </h2>\n                    <p className=\"citation\">\n                        <cite>\n                            \" {review.review} \"\n                        </cite>\n                    </p>\n                    <Button onClick={() => { removeReview(review.review) }} variant=\"contained\" color=\"primary\">\n                        delete\n                    </Button>\n                </div> : null\n            )}\n        </ul>\n    );\n\n    return (\n        <React.Fragment>\n            <Nav />\n            <h1>Reviews of the book: {nameTitle} </h1>\n            <div className=\"books-list\">\n                <div>{listReviews}</div>\n            </div>\n            \n        </React.Fragment>\n    );\n}\n\nexport default Reviews;","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Books.js",[],"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Nav.js",[],"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/Footer.js",[],"/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/FormAddBook.js",["52","53"],"import React, { useState, useEffect } from 'react';\nimport api from '../services/Api';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nfunction FormAddBook() {\n\n    const [title, setTitle] = useState([]);\n    const [author, setAuthor] = useState([]);\n\n    const handleChange = e => {\n        setTitle(e.target.value);\n\n    }\n\n    const handleAuthorChange = e => {\n        setAuthor(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        async function uploadBook() {\n\n            const addedBook = {\n                \"title\": title.toString().trim(),\n                \"author\": author.toString().trim()\n            };\n\n            const response = await api.post('/add-book', addedBook).then(() => console.log('Sending to backend')).catch(err => {\n                console.log(err);\n            });\n        }\n        uploadBook();\n\n        setTitle('');\n        setAuthor('');\n\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"inputs\" onSubmit={handleSubmit}>\n                <h3>Add a new book</h3>\n                <Input\n                    placeholder=\"title\"\n                    inputProps={{ 'aria-label': 'description' }}\n                    type=\"text\"\n                    name=\"title\"\n                    value={title}\n                    onChange={handleChange}\n                />\n\n                <Input\n                    placeholder=\"author\"\n                    inputProps={{ 'aria-label': 'description' }}\n                    type=\"text\"\n                    name=\"author\"\n                    value={author}\n                    onChange={handleAuthorChange}\n                />\n                <Button type=\"submit\" variant=\"contained\" color=\"secundary\">\n                    Add Book\n                </Button>\n            </form>\n        </React.Fragment>\n    );\n}\n\nexport default FormAddBook;","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/components/FormAddReview.js",["54"],"import React, { useState } from 'react';\nimport api from '../services/Api';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nfunction FormAddReview() {\n\n    const [bookTitle, setBookTitle] = useState([]);\n    const [reviewerName, setReviewerName] = useState([]);\n    const [reviewText, setReviewText] = useState([]);\n\n    const handleChangeBookTitle = e => {\n        setBookTitle(e.target.value);\n    }\n\n    const handleChangeReviewerName = e => {\n        setReviewerName(e.target.value);\n    }\n\n    const handleChangeReviewText = e => {\n        setReviewText(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        async function uploadReview() {\n\n            const addedReview = {\n                \"title\": bookTitle.toString().trim().toLowerCase(),\n                \"name\": reviewerName.toString().trim().toLowerCase(),\n                \"review\": reviewText.toString().trim().toLowerCase()\n            };\n\n            const response = await api.post('/add-review', addedReview).then(() => console.log('Sending to backend')).catch(err => {\n                console.log(err);\n            });\n        }\n        uploadReview();\n\n        setBookTitle('');\n        setReviewerName('');\n        setReviewText('');\n\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"inputs\" onSubmit={handleSubmit}>\n                <h3>Add a review</h3>\n                <Input\n                    placeholder=\"Which Book\"\n                    type=\"text\"\n                    name=\"title\"\n                    value={bookTitle}\n                    onChange={handleChangeBookTitle}\n                />\n                <Input\n                    placeholder=\"Your name\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={reviewerName}\n                    onChange={handleChangeReviewerName}\n                />\n                <Input\n                    placeholder=\"Tell us\"\n                    type=\"text\"\n                    name=\"review\"\n                    value={reviewText}\n                    onChange={handleChangeReviewText}\n                />\n                <Button type=\"submit\" variant=\"contained\" color=\"secundary\">\n                    Add Review\n                </Button>\n            </form>\n        </React.Fragment>\n    );\n}\n\nexport default FormAddReview;\n","/home/mrosa/Documents/Projects_2021/heroku/reviewing-2.0-react/client/src/services/Api.js",[],{"ruleId":"55","severity":1,"message":"56","line":10,"column":9,"nodeType":"57","endLine":10,"endColumn":65},{"ruleId":"58","severity":1,"message":"59","line":28,"column":51,"nodeType":"60","messageId":"61","endLine":28,"endColumn":53},{"ruleId":"62","severity":1,"message":"63","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"66","line":30,"column":19,"nodeType":"64","messageId":"65","endLine":30,"endColumn":27},{"ruleId":"62","severity":1,"message":"66","line":35,"column":19,"nodeType":"64","messageId":"65","endLine":35,"endColumn":27},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used."]